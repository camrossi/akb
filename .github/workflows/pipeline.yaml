# This is a basic workflow to help you get started with Actions

name: new-testing-pipeline

# Controls when the workflow will run
on:
  pull_request:
    types: [synchronize, opened, reopened, edited]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cleanup_stale_vms:
  # This job clean up all the VMs called gitaction-nkt found on the vcenters.
  # it uses a local script that is not in git as it contains sensitive credentials
    runs-on: stld
    defaults:
      run:
        working-directory: v4/testing
    steps:
      - uses: actions/checkout@v2
        with:
          path: v4
      - name: Cleanup Stale VMs
        run: | 
            sh clean_stale_vms.sh

  nkt-no-cluster-calico:
    concurrency: stld_calico_v4
    # The type of runner that the job will run on
    runs-on: stld
    defaults:
      run:
        working-directory: no-cluster/terraform
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: no-cluster
      - name: Install dependencies
        run: |
          pip3 install -r ../requirements.txt
      - name: Start NKT
        run: | 
          gunicorn -w 4 -k gevent -b 0.0.0.0:5001 appflask:app -D ; sleep 5
      - name: Run headless chrome to generate the config
        run: | 
          python3 ../testing/selenium/selenium_ui_testing_dev_no_cluster_v4.py --headless && sleep 2
      - name: Terraform plan
        run: | 
          curl -c cookie.txt -s http://10.67.185.120:5001/ -o /dev/null && curl -b cookie.txt -s http://10.67.185.120:5001/tf_plan
      - name: Terraform apply
        run: | 
          curl -b cookie.txt -s http://10.67.185.120:5001/tf_apply      
      - name: Download Manifest Files
        run: | 
          curl -b cookie.txt --fail http://10.67.185.120:5001/static/manifests/manifests.zip
      - name: Kill Terraform if workflow is cancelled manually
        if: cancelled()
        run: | 
          killall terraform
      - name: Terraform destroy and delete APIC user
        if: always()
        run: | 
          curl -b cookie.txt -s http://10.67.185.120:5001/destroy
  
  nkt-calico-v4:
    concurrency: stld_calico_v4
    # The type of runner that the job will run on
    runs-on: stld
    defaults:
      run:
        working-directory: v4/terraform

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: v4
      - name: Install dependencies
        run: |
          pip3 install -r ../requirements.txt
      - name: Copy Private Key
        run: | 
          cp /nfs-share/www/nkt/id_rsa ../ansible/roles/sandbox/files/id_rsa
      - name: Start NKT
        run: | 
          gunicorn -w 4 -k gevent -b 0.0.0.0:5001 appflask:app -D ; sleep 5
      - name: Run headless chrome to generate the config
        run: | 
          python3 ../testing/selenium/selenium_ui_testing_dev_cluster_v4.py --headless
      - name: Terraform plan
        run: | 
          curl -c cookie.txt -s http://10.67.185.120:5001/ -o /dev/null && curl -b cookie.txt -s http://10.67.185.120:5001/tf_plan
      - name: Terraform apply
        run: | 
          curl -b cookie.txt -s http://10.67.185.120:5001/tf_apply
      - name: Check if all the nodes are ready
        run: | 
          kubectl --kubeconfig=../ansible/roles/primary_master/files/admin.conf wait --for=condition=Ready nodes --all --timeout=600s
      - name: Check if all the pods are ready
        run: | 
          kubectl --kubeconfig=../ansible/roles/primary_master/files/admin.conf wait --for=condition=Ready pods --all --all-namespaces --timeout=600s

      - name: Kill Terraform if workflow is cancelled manually
        if: cancelled()
        run: | 
          killall terraform 
          
      - name: Terraform destroy and delete APIC user
        if: always()
        run: | 
          curl -b cookie.txt -s  http://10.67.185.120:5003/destroy
      
  nkt-no-cluster-kube-router:
    concurrency: stld_kube_router
    # The type of runner that the job will run on
    runs-on: stld
    defaults:
      run:
        working-directory: no-cluster/terraform
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: no-cluster
      - name: Install dependencies
        run: |
          pip3 install -r ../requirements.txt
      - name: Start NKT
        run: | 
          gunicorn -w 4 -k gevent -b 0.0.0.0:5002 appflask:app -D ; sleep 5
      - name: Run headless chrome to generate the config
        run: | 
          python3 ../testing/selenium/selenium_ui_testing_dev_no_cluster_v4_kube-router.py --headless && sleep 2
      - name: Terraform plan
        run: | 
          curl -c cookie.txt -s http://10.67.185.120:5002/ -o /dev/null && curl -b cookie.txt -s http://10.67.185.120:5002/tf_plan
      - name: Terraform apply
        run: | 
          curl -b cookie.txt -s http://10.67.185.120:5002/tf_apply      
      - name: Download Manifest Files
        run: | 
          curl -b cookie.txt --fail http://10.67.185.120:5002/static/manifests/manifests.zip
      - name: Kill Terraform if workflow is cancelled manually
        if: cancelled()
        run: | 
          killall terraform

      - name: Terraform destroy and delete APIC user
        if: always()
        run: | 
          curl -b cookie.txt -s http://10.67.185.120:5001/destroy



