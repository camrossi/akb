---

- name: Copy Calico manifests
  template:
    src: "{{ item }}"
    dest: /tmp/{{ item }}
    force: yes
  with_items:
    - BGPPassSecret.yaml
    - IPPool.yaml
    - BGPConfiguration.yaml
    - BGPPeer.j2
    - Node.j2
    - kustomization.yaml
    - calico-typha-patch.yaml
  tags:
    - calico

- name: Install calicoctl
  get_url:
    url: https://github.com/projectcalico/calico/releases/download/v3.21.4/calicoctl-linux-amd64
    dest: /bin/calicoctl
    force: yes
    mode: '0755'
  register: res
  retries: 10
  until: res is success
  any_errors_fatal: true
  tags:
    - calico

- name: download latest calico
  get_url:
    url: https://projectcalico.docs.tigera.io/manifests/calico-typha.yaml
    dest: /tmp/calico-typha.yaml
    force: yes
    mode: '0755'
  retries: 10
  until: res is success
  any_errors_fatal: true
  tags:
    - calico

- name: Extract and update calico Config Map 
  shell: |
    data=$(yq '. | select(.metadata.name=="calico-config") | .data.cni_network_config' /tmp/calico-typha.yaml)
    updateddata=$(echo $data | yq -o json '.plugins[0].ipam.assign_ipv4 = "true" | .plugins[0].ipam.assign_ipv6 = "true"')
    myenv=$updateddata  yq  'select(.metadata.name=="calico-config") |= .data.cni_network_config=strenv(myenv)' /tmp/calico-typha.yaml > /tmp/config-map-patch.yaml
  any_errors_fatal: true
  tags:
    - calico

- name: Kustomize the Calico config and apply it
  shell: |
    kubectl kustomize /tmp/ > /tmp/calico-typha-custom.yaml
  any_errors_fatal: true
  tags:
    - calico

#Labels the node with the rack_id
- name: Labels Nodes with rack_id
  shell: |
    kubectl label node {{ item }} rack_id="{{ hostvars[item]['rack_id'] }}" --overwrite
  loop: "{{groups['k8s_nodes']}}"
  register: label_res
  retries: 10
  until: label_res is success
  any_errors_fatal: true
  tags:
    - calico

- name: Apply Calico CNI
  shell: kubectl apply -f /tmp/calico-typha-custom.yaml
  register: res
  retries: 10
  until: res is success
  any_errors_fatal: true
  tags:
    - calico

- name: Create BGP Pass Secret
  shell: kubectl apply -f /tmp/BGPPassSecret.yaml
  register: res
  retries: 10
  until: res is success
  any_errors_fatal: true
  tags:
    - calico

- name: Apply Calico Configs
  shell: calicoctl apply -f /tmp/{{ item }}
  with_items:
    - IPPool.yaml
    - BGPConfiguration.yaml
    - BGPPeer.j2
    - Node.j2
  register: res
  retries: 100
  until: res is success
  any_errors_fatal: true
  tags:
    - calico
