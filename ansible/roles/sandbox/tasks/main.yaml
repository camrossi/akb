- name: Pre Pull Kubeadm Images
  command: kubeadm config images pull --kubernetes-version "{{ kube_version.split("-")[0] }}"
  tags:
    - sandbox

- name: Pre Pull Images
  command: crictl pull "{{ item }}"
  with_items:
   - docker.io/bloomberg/goldpinger:v3.3.0
   - docker.io/calico/cni:v3.22.0
   - docker.io/calico/kube-controllers:v3.22.0
   - docker.io/calico/node:v3.22.0
   - docker.io/calico/pod2daemon-flexvol:v3.22.0
   - docker.io/calico/typha:v3.22.0
   - gcr.io/google-samples/gb-frontend:v4
   - gcr.io/google_samples/gb-redisslave:v1
   - haproxy:latest
   - k8s.gcr.io/metrics-server/metrics-server:v0.4.2
   - k8s.gcr.io/redis:e2e
   - osixia/keepalived:latest
   - kubernetesui/dashboard:v2.2.0
   - kubernetesui/metrics-scraper:v1.0.6
   - quay.io/camillo/vkaci:0.2
   - quay.io/camillo/vkaci-init:0.2
   - k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
   - k8s.gcr.io/ingress-nginx/controller:v1.1.1
   - neo4j:4.4.3
  tags:
    - sandbox

- name: Install calicoctl
  get_url:
    url: https://github.com/projectcalico/calico/releases/download/v3.22.0/calicoctl-linux-amd64
    dest: /bin/calicoctl
    force: yes
    mode: '0755'
  register: res
  retries: 10
  until: res is success
  any_errors_fatal: true
  environment: "{{ proxy_env }}"
  tags:
    - sandbox

- name: Add ingress-nginx helm Repo
  shell: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
  environment: "{{ proxy_env }}"
  tags:
    - sandbox

- name: Add Neo4J helm Repo
  shell: helm repo add neo4j https://helm.neo4j.com/neo4j
  environment: "{{ proxy_env }}"
  tags:
    - sandbox

- name: helm repo update
  shell: helm repo update
  environment: "{{ proxy_env }}"
  tags:
    - sandbox

- name: Download Ingress Chart
  shell: helm pull ingress-nginx/ingress-nginx --version 4.0.17
  environment: "{{ proxy_env }}"
  tags:
    - sandbox

- name: Download Neo4j Chart
  shell: helm pull  neo4j/neo4j-standalone --version 4.4.3  
  environment: "{{ proxy_env }}"
  tags:
    - sandbox

- name: Add SSH Public Key in known_hosts
  authorized_key:
    user: "{{ ansible_user }}"
    key: "{{ lookup('file', 'id_rsa.pub') }}"
    state: present
  tags:
    - sandbox

- name: Make sure we have a 'wheel' group
  group:
    name: wheel
    state: present
  tags:
    - sandbox

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  tags:
    - sandbox

- name: Add sudoers users to wheel group
  user:
    name="{{ ansible_user }}"
    groups=wheel
    append=yes
    state=present
  tags:
    - sandbox

- name: Restore default apt mirror on ubuntu
  template:
    src: ../k8s_nodes/templates/sources.list.j2
    dest: /etc/apt/sources.list
    backup: yes
  tags:
    - sandbox

- name: remove crio http proxy config
  file:
    path: /etc/systemd/system/crio.service.d/http-proxy.conf
    state: absent
  when: http_proxy_status == true
  tags:
    - sandbox

- name: Remove Network Config
  file: 
    path: /etc/netplan/00-installer-config.yaml
    state: absent
  ignore_errors: true
  tags:
    - sandbox