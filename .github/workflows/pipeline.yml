# This is a basic workflow to help you get started with Actions

name: testing-pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the master branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  start-akb:
    # The type of runner that the job will run on
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./terraform

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Start AKB
        run: | 
          python3 appflask.py &
      - name: Run headless chrome to generate the config
        run: | 
          python3 selenium_ui_testing_dev_cluster.py
      - name: Terraform init
        run: | 
          terraform init
      - name: Terraform plan
        run: | 
          terraform plan -var-file="cluster.tfvars" -out=plan
      - name: Terraform apply
        run: | 
          terraform apply "plan"
      - name: Check if all the nodes are ready
        run: | 
          kubectl wait --for=condition=Ready nodes --all --timeout=600s
      - name: Check if all the pods are ready
        run: | 
          kubectl wait --for=condition=Ready pods --all --all-namespaces
      - name: Terraform destroy
        run: | 
          terraform destroy -auto-approve -var-file='cluster.tfvars'

